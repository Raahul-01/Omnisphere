rules_version = '2';

service cloud.firestore {
  match /databases/{database}/documents {
    // Helper functions
    function isAuthenticated() {
      return request.auth != null;
    }
    
    function isAdmin() {
      return isAuthenticated() && 
        exists(/databases/$(database)/documents/users/$(request.auth.uid)/roles/admin);
    }
    
    function isRateLimited() {
      let recentRequests = request.time.toMillis() - 
        (get(/databases/$(database)/documents/users/$(request.auth.uid)/lastRequest).data.timestamp ?? 0);
      return recentRequests < 100; // 100ms between requests
    }

    // Allow public read access to articles - this is the main content
    match /articles/{document=**} {
      allow read: if true;
      allow write: if isAuthenticated() && !isRateLimited();
      allow delete: if isAdmin();
    }

    // Allow public read access to posts - alternative content structure
    match /posts/{document=**} {
      allow read: if true;
      allow write: if isAuthenticated() && !isRateLimited();
      allow delete: if isAdmin();
    }

    // Allow public read access to categories
    match /categories/{document=**} {
      allow read: if true;
      allow write: if isAdmin();
    }

    // Allow public read access to generated content with rate limiting
    match /generated_content/{document=**} {
      allow read: if true;
      allow write: if isAuthenticated() && !isRateLimited();
      allow delete: if isAdmin();
    }

    // Trends collection
    match /trends/{document=**} {
      allow read: if true;
      allow write: if isAuthenticated() && !isRateLimited();
    }

    // User profiles
    match /users/{userId} {
      allow read: if true;
      allow write: if request.auth.uid == userId;
      
      // User's private data
      match /private/{document=**} {
        allow read, write: if request.auth.uid == userId;
      }
      
      // User's bookmarks
      match /bookmarks/{document=**} {
        allow read: if request.auth.uid == userId;
        allow write: if request.auth.uid == userId && !isRateLimited();
      }
    }

    // Default rule - deny everything else
    match /{document=**} {
      allow read, write: if false;
    }
  }
} 